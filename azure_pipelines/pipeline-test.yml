variables:
  - name: 'repositoryName' # Name of the repository
    value: 'ameyapatOrg/pipelinetest'
  - name: 'repositoryBranch' # Name of the branch where version number will be updated for files that contain version number.
    value: 'master'
  - name: 'isMain'
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - CHANGELOG.md

pr: none

resources:
  repositories:
  - repository: msalRepository
    type: github
    endpoint: 'ameyapat'
    name: $(repositoryName)
    ref: $(repositoryBranch)

jobs:
- job: PipelineTestJob
  displayName: Pipeline Test for trigger check
  #condition: and(eq(variables.isMain, true),ne(variables['Build.Reason'], 'PullRequest'))
  pool:
    vmImage: 'macOS-latest'
    timeOutInMinutes: 20

  steps:
  - checkout: msalRepository
    clean: true
    submodules: true
    fetchDepth: 1
    persistCredentials: true
  - task: Bash@3
    displayName: git push
    inputs:
      targetType: 'inline'
      script: |
        rm -rf release-notes.md
        rm -rf cc-release-notes.md
        git config --global user.email "ameya.v.patil@gmail.com"
        git config --global user.name "ameyaPipeline"
        git config --list
        git fetch origin $(repositoryBranch) -q
        git checkout FETCH_HEAD -q
        git checkout -b update-package -q
        if [ ! -e Package.swift ]; then
            echo -e "// swift-tools-version:5.3\n" >> Package.swift
            cat >> Package.swift << EOF
        import PackageDescription

        let package = Package(
          name: "MSAL",
          platforms: [
                .macOS(.v10_12),.iOS(.v11)
          ],
          products: [
              .library(
                  name: "MSAL",
                  targets: ["MSAL"]),
          ],
          targets: [
              .binaryTarget(name: "MSAL", url: "https://github.com/$(repositoryName)/releases/download/releaseTag1.2.3/MSAL.zip", checksum: "abcdefabcdef1234567890abcdef1234567890abcdef1234567890abcdef1234")
          ]
        )
        EOF
        fi
        perl -i -pe's/releases\/download\/[0-9a-zA-Z\.].+\//releases\/download\/$(Build.BuildId)\//' Package.swift
        git add Package.swift
        author=$(git log -1 --pretty=format:'%an <%ae>')
        echo "Commiting as ${author}"
        echo "$(Build.RequestedFor) <$(Build.RequestedForId)>"
        git commit -a -m "Updating MSAL framework checksum & url [skip ci]" -q --author="${author}" -q
        git checkout $(repositoryBranch) -q
        git merge update-package -q
        git push origin $(repositoryBranch) -q
        git branch -d update-package -q
      workingDirectory: '$(Build.SourcesDirectory)'
      failOnStderr: true
      noProfile: false
      noRc: false
      
  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'ameyapat'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'gitTag'
      title: 'TEST'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'issueBased'
